|lcdController
clk => clk.IN2
<<<<<<< HEAD
lcdBackLightIn => lcdBacklightOut.DATAIN
switches[0] => switches[0].IN1
switches[1] => switches[1].IN1
switches[2] => switches[2].IN1
switches[3] => switches[3].IN1
switches[4] => switches[4].IN1
switches[5] => switches[5].IN1
switches[6] => switches[6].IN1
switches[7] => switches[7].IN1
switches[8] => switches[8].IN1
switches[9] => switches[9].IN1
switches[10] => switches[10].IN1
switches[11] => switches[11].IN1
switches[12] => switches[12].IN1
switches[13] => switches[13].IN1
switches[14] => switches[14].IN1
switches[15] => switches[15].IN1
lcdOn => lcdOn.IN2
lcdBus[0] <> lcdController:myController.port4
lcdBus[1] <> lcdController:myController.port4
lcdBus[2] <> lcdController:myController.port4
lcdBus[3] <> lcdController:myController.port4
lcdBus[4] <> lcdController:myController.port4
lcdBus[5] <> lcdController:myController.port4
lcdBus[6] <> lcdController:myController.port4
lcdBus[7] <> lcdController:myController.port4
lcdReadWriteSel <= lcdController:myController.port5
lcdRsSelect <= lcdController:myController.port6
lcdEnableOut <= lcdController:myController.port7
errorLed1 <= lcdController:myController.port8
errorLed2 <= lcdInterface:myInterface.port10
lcdPwr <= lcdOn.DB_MAX_OUTPUT_PORT_TYPE
lcdBacklightOut <= lcdBackLightIn.DB_MAX_OUTPUT_PORT_TYPE
=======
writeEnable => writeEnable.IN1
lcdOnIn => lcdOnIn.IN1
writeAddr[0] => writeAddr[0].IN1
writeAddr[1] => writeAddr[1].IN1
writeAddr[2] => writeAddr[2].IN1
writeAddr[3] => writeAddr[3].IN1
writeAddr[4] => writeAddr[4].IN1
charCode[0] => charCode[0].IN1
charCode[1] => charCode[1].IN1
charCode[2] => charCode[2].IN1
charCode[3] => charCode[3].IN1
charCode[4] => charCode[4].IN1
charCode[5] => charCode[5].IN1
charCode[6] => charCode[6].IN1
charCode[7] => charCode[7].IN1
lcdBus[0] <= lcdStateMachine:myStateMachine.port3
lcdBus[1] <= lcdStateMachine:myStateMachine.port3
lcdBus[2] <= lcdStateMachine:myStateMachine.port3
lcdBus[3] <= lcdStateMachine:myStateMachine.port3
lcdBus[4] <= lcdStateMachine:myStateMachine.port3
lcdBus[5] <= lcdStateMachine:myStateMachine.port3
lcdBus[6] <= lcdStateMachine:myStateMachine.port3
lcdBus[7] <= lcdStateMachine:myStateMachine.port3
lcdOnOut <= lcdStateMachine:myStateMachine.port5
lcdReadWriteSel <= lcdStateMachine:myStateMachine.port6
lcdRsSelect <= lcdStateMachine:myStateMachine.port7
lcdEnableOut <= lcdStateMachine:myStateMachine.port8
errorLed <= lcdStateMachine:myStateMachine.port9
>>>>>>> justLcdControler


|lcdController|lcdRegisterFile:myRegisters
clk => charCode.we_a.CLK
clk => charCode.waddr_a[4].CLK
clk => charCode.waddr_a[3].CLK
clk => charCode.waddr_a[2].CLK
clk => charCode.waddr_a[1].CLK
clk => charCode.waddr_a[0].CLK
clk => charCode.data_a[7].CLK
clk => charCode.data_a[6].CLK
clk => charCode.data_a[5].CLK
clk => charCode.data_a[4].CLK
clk => charCode.data_a[3].CLK
clk => charCode.data_a[2].CLK
clk => charCode.data_a[1].CLK
clk => charCode.data_a[0].CLK
clk => dataOut[0]~reg0.CLK
clk => dataOut[1]~reg0.CLK
clk => dataOut[2]~reg0.CLK
clk => dataOut[3]~reg0.CLK
clk => dataOut[4]~reg0.CLK
clk => dataOut[5]~reg0.CLK
clk => dataOut[6]~reg0.CLK
clk => dataOut[7]~reg0.CLK
clk => charCode.CLK0
writeEnable => always0.IN0
readEnable => always0.IN1
readEnable => dataOut[0]~reg0.ENA
readEnable => dataOut[1]~reg0.ENA
readEnable => dataOut[2]~reg0.ENA
readEnable => dataOut[3]~reg0.ENA
readEnable => dataOut[4]~reg0.ENA
readEnable => dataOut[5]~reg0.ENA
readEnable => dataOut[6]~reg0.ENA
readEnable => dataOut[7]~reg0.ENA
writeAddr[0] => charCode.waddr_a[0].DATAIN
writeAddr[0] => charCode.WADDR
writeAddr[1] => charCode.waddr_a[1].DATAIN
writeAddr[1] => charCode.WADDR1
writeAddr[2] => charCode.waddr_a[2].DATAIN
writeAddr[2] => charCode.WADDR2
writeAddr[3] => charCode.waddr_a[3].DATAIN
writeAddr[3] => charCode.WADDR3
writeAddr[4] => charCode.waddr_a[4].DATAIN
writeAddr[4] => charCode.WADDR4
dataIn[0] => charCode.data_a[0].DATAIN
dataIn[0] => charCode.DATAIN
dataIn[1] => charCode.data_a[1].DATAIN
dataIn[1] => charCode.DATAIN1
dataIn[2] => charCode.data_a[2].DATAIN
dataIn[2] => charCode.DATAIN2
dataIn[3] => charCode.data_a[3].DATAIN
dataIn[3] => charCode.DATAIN3
dataIn[4] => charCode.data_a[4].DATAIN
dataIn[4] => charCode.DATAIN4
dataIn[5] => charCode.data_a[5].DATAIN
dataIn[5] => charCode.DATAIN5
dataIn[6] => charCode.data_a[6].DATAIN
dataIn[6] => charCode.DATAIN6
dataIn[7] => charCode.data_a[7].DATAIN
dataIn[7] => charCode.DATAIN7
addrToRead[0] => charCode.RADDR
addrToRead[1] => charCode.RADDR1
addrToRead[2] => charCode.RADDR2
addrToRead[3] => charCode.RADDR3
addrToRead[4] => charCode.RADDR4
dataOut[0] <= dataOut[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[1] <= dataOut[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[2] <= dataOut[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[3] <= dataOut[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[4] <= dataOut[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[5] <= dataOut[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[6] <= dataOut[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[7] <= dataOut[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


<<<<<<< HEAD
|lcdControllerTop|patternConverter:tenThousand
bcdInput[0] => Decoder0.IN3
bcdInput[1] => Decoder0.IN2
bcdInput[2] => Decoder0.IN1
bcdInput[3] => Decoder0.IN0
lcdPattern[0] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[1] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[2] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[3] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[4] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[7] <= <GND>


|lcdControllerTop|patternConverter:thousand
bcdInput[0] => Decoder0.IN3
bcdInput[1] => Decoder0.IN2
bcdInput[2] => Decoder0.IN1
bcdInput[3] => Decoder0.IN0
lcdPattern[0] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[1] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[2] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[3] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[4] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[7] <= <GND>


|lcdControllerTop|patternConverter:hundred
bcdInput[0] => Decoder0.IN3
bcdInput[1] => Decoder0.IN2
bcdInput[2] => Decoder0.IN1
bcdInput[3] => Decoder0.IN0
lcdPattern[0] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[1] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[2] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[3] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[4] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[7] <= <GND>


|lcdControllerTop|patternConverter:ten
bcdInput[0] => Decoder0.IN3
bcdInput[1] => Decoder0.IN2
bcdInput[2] => Decoder0.IN1
bcdInput[3] => Decoder0.IN0
lcdPattern[0] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[1] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[2] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[3] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[4] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[7] <= <GND>


|lcdControllerTop|patternConverter:one
bcdInput[0] => Decoder0.IN3
bcdInput[1] => Decoder0.IN2
bcdInput[2] => Decoder0.IN1
bcdInput[3] => Decoder0.IN0
lcdPattern[0] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[1] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[2] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[3] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[4] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
lcdPattern[7] <= <GND>


|lcdControllerTop|lcdInterface:myInterface
clk => errorLed~reg0.CLK
clk => inBus[0]~reg0.CLK
clk => inBus[1]~reg0.CLK
clk => inBus[2]~reg0.CLK
clk => inBus[3]~reg0.CLK
clk => inBus[4]~reg0.CLK
clk => inBus[5]~reg0.CLK
clk => inBus[6]~reg0.CLK
clk => inBus[7]~reg0.CLK
clk => addrOrData~reg0.CLK
clk => addrData.CLK
clk => state~1.DATAIN
rst => errorLed~reg0.ACLR
rst => inBus[0]~reg0.ACLR
rst => inBus[1]~reg0.ACLR
rst => inBus[2]~reg0.ACLR
rst => inBus[3]~reg0.ACLR
rst => inBus[4]~reg0.ACLR
rst => inBus[5]~reg0.ACLR
rst => inBus[6]~reg0.ACLR
rst => inBus[7]~reg0.ACLR
rst => addrOrData~reg0.ACLR
rst => addrData.ACLR
rst => state~3.DATAIN
busLock => state.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => state.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => inBus.OUTPUTSELECT
busLock => errorLed~reg0.ENA
busLock => addrData.ENA
busLock => addrOrData~reg0.ENA
tenThou[0] => inBus.DATAB
tenThou[1] => inBus.DATAB
tenThou[2] => inBus.DATAB
tenThou[3] => inBus.DATAB
tenThou[4] => inBus.DATAB
tenThou[5] => inBus.DATAB
tenThou[6] => inBus.DATAB
tenThou[7] => inBus.DATAB
thou[0] => inBus.DATAB
thou[1] => inBus.DATAB
thou[2] => inBus.DATAB
thou[3] => inBus.DATAB
thou[4] => inBus.DATAB
thou[5] => inBus.DATAB
thou[6] => inBus.DATAB
thou[7] => inBus.DATAB
hund[0] => inBus.DATAB
hund[1] => inBus.DATAB
hund[2] => inBus.DATAB
hund[3] => inBus.DATAB
hund[4] => inBus.DATAB
hund[5] => inBus.DATAB
hund[6] => inBus.DATAB
hund[7] => inBus.DATAB
tens[0] => inBus.DATAB
tens[1] => inBus.DATAB
tens[2] => inBus.DATAB
tens[3] => inBus.DATAB
tens[4] => inBus.DATAB
tens[5] => inBus.DATAB
tens[6] => inBus.DATAB
tens[7] => inBus.DATAB
ones[0] => inBus.DATAB
ones[1] => inBus.DATAB
ones[2] => inBus.DATAB
ones[3] => inBus.DATAB
ones[4] => inBus.DATAB
ones[5] => inBus.DATAB
ones[6] => inBus.DATAB
ones[7] => inBus.DATAB
addrOrData <= addrOrData~reg0.DB_MAX_OUTPUT_PORT_TYPE
inBus[0] <= inBus[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inBus[1] <= inBus[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inBus[2] <= inBus[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inBus[3] <= inBus[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inBus[4] <= inBus[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inBus[5] <= inBus[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inBus[6] <= inBus[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inBus[7] <= inBus[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
errorLed <= errorLed~reg0.DB_MAX_OUTPUT_PORT_TYPE


|lcdControllerTop|lcdController:myController
clk => lcdReadWriteSel~reg0.CLK
clk => lcdRsSelect~reg0.CLK
clk => busLock~reg0.CLK
=======
|lcdController|lcdStateMachine:myStateMachine
clk => addrToRead[0]~reg0.CLK
clk => addrToRead[1]~reg0.CLK
clk => addrToRead[2]~reg0.CLK
clk => addrToRead[3]~reg0.CLK
clk => addrToRead[4]~reg0.CLK
clk => lcdReadWriteSel~reg0.CLK
clk => lcdRsSelect~reg0.CLK
clk => readEnable~reg0.CLK
clk => addrCounter[0].CLK
clk => addrCounter[1].CLK
clk => addrCounter[2].CLK
clk => addrCounter[3].CLK
clk => addrCounter[4].CLK
clk => addrCounter[5].CLK
clk => addrCounter[6].CLK
>>>>>>> justLcdControler
clk => lcdBus[0]~reg0.CLK
clk => lcdBus[0]~en.CLK
clk => lcdBus[1]~reg0.CLK
clk => lcdBus[1]~en.CLK
clk => lcdBus[2]~reg0.CLK
clk => lcdBus[2]~en.CLK
clk => lcdBus[3]~reg0.CLK
clk => lcdBus[3]~en.CLK
clk => lcdBus[4]~reg0.CLK
clk => lcdBus[4]~en.CLK
clk => lcdBus[5]~reg0.CLK
clk => lcdBus[5]~en.CLK
clk => lcdBus[6]~reg0.CLK
clk => lcdBus[6]~en.CLK
clk => lcdBus[7]~reg0.CLK
clk => lcdBus[7]~en.CLK
clk => errorLed~reg0.CLK
clk => lcdEnableOut~reg0.CLK
clk => displayOnOff.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
<<<<<<< HEAD
clk => functionSetCounter~5.DATAIN
clk => state~7.DATAIN
addrOrData => Selector27.IN2
addrOrData => Selector28.IN4
addrOrData => Selector33.IN5
addrOrData => Selector36.IN1
lcdOnIn => busLock~reg0.PRESET
lcdOnIn => lcdBus[0]~en.ACLR
lcdOnIn => lcdBus[1]~en.ACLR
lcdOnIn => lcdBus[2]~en.ACLR
lcdOnIn => lcdBus[3]~en.ACLR
lcdOnIn => lcdBus[4]~en.ACLR
lcdOnIn => lcdBus[5]~en.ACLR
lcdOnIn => lcdBus[6]~en.ACLR
lcdOnIn => lcdBus[7]~en.ACLR
=======
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => counter[26].CLK
clk => counter[27].CLK
clk => counter[28].CLK
clk => counter[29].CLK
clk => counter[30].CLK
clk => counter[31].CLK
clk => counter[32].CLK
clk => subStates~1.DATAIN
clk => functionSetCase~5.DATAIN
clk => state~1.DATAIN
lcdOnIn => lcdOnOut.DATAIN
lcdOnIn => readEnable~reg0.ACLR
lcdOnIn => addrCounter[0].ACLR
lcdOnIn => addrCounter[1].ACLR
lcdOnIn => addrCounter[2].ACLR
lcdOnIn => addrCounter[3].ACLR
lcdOnIn => addrCounter[4].ACLR
lcdOnIn => addrCounter[5].ACLR
lcdOnIn => addrCounter[6].ACLR
lcdOnIn => lcdBus[0]~reg0.ACLR
lcdOnIn => lcdBus[0]~en.PRESET
lcdOnIn => lcdBus[1]~reg0.ACLR
lcdOnIn => lcdBus[1]~en.PRESET
lcdOnIn => lcdBus[2]~reg0.ACLR
lcdOnIn => lcdBus[2]~en.PRESET
lcdOnIn => lcdBus[3]~reg0.ACLR
lcdOnIn => lcdBus[3]~en.PRESET
lcdOnIn => lcdBus[4]~reg0.ACLR
lcdOnIn => lcdBus[4]~en.PRESET
lcdOnIn => lcdBus[5]~reg0.ACLR
lcdOnIn => lcdBus[5]~en.PRESET
lcdOnIn => lcdBus[6]~reg0.ACLR
lcdOnIn => lcdBus[6]~en.PRESET
lcdOnIn => lcdBus[7]~reg0.PRESET
>>>>>>> justLcdControler
lcdOnIn => errorLed~reg0.ACLR
lcdOnIn => lcdEnableOut~reg0.ACLR
lcdOnIn => displayOnOff.ACLR
lcdOnIn => counter[0].ACLR
lcdOnIn => counter[1].ACLR
lcdOnIn => counter[2].ACLR
lcdOnIn => counter[3].ACLR
lcdOnIn => counter[4].ACLR
lcdOnIn => counter[5].ACLR
lcdOnIn => counter[6].ACLR
lcdOnIn => counter[7].ACLR
lcdOnIn => counter[8].ACLR
lcdOnIn => counter[9].ACLR
lcdOnIn => counter[10].ACLR
lcdOnIn => counter[11].ACLR
lcdOnIn => counter[12].ACLR
lcdOnIn => counter[13].ACLR
lcdOnIn => counter[14].ACLR
lcdOnIn => counter[15].ACLR
lcdOnIn => counter[16].ACLR
lcdOnIn => counter[17].ACLR
lcdOnIn => counter[18].ACLR
lcdOnIn => counter[19].ACLR
<<<<<<< HEAD
lcdOnIn => functionSetCounter~7.DATAIN
lcdOnIn => state~9.DATAIN
lcdOnIn => lcdReadWriteSel~reg0.ENA
lcdOnIn => lcdRsSelect~reg0.ENA
dataInBus[0] => ~NO_FANOUT~
dataInBus[1] => ~NO_FANOUT~
dataInBus[2] => ~NO_FANOUT~
dataInBus[3] => ~NO_FANOUT~
dataInBus[4] => ~NO_FANOUT~
dataInBus[5] => ~NO_FANOUT~
dataInBus[6] => ~NO_FANOUT~
dataInBus[7] => ~NO_FANOUT~
lcdBus[0] <> lcdBus[0]
lcdBus[1] <> lcdBus[1]
lcdBus[2] <> lcdBus[2]
lcdBus[3] <> lcdBus[3]
lcdBus[4] <> lcdBus[4]
lcdBus[5] <> lcdBus[5]
lcdBus[6] <> lcdBus[6]
lcdBus[7] <> lcdBus[7]
=======
lcdOnIn => counter[20].ACLR
lcdOnIn => counter[21].ACLR
lcdOnIn => counter[22].ACLR
lcdOnIn => counter[23].ACLR
lcdOnIn => counter[24].ACLR
lcdOnIn => counter[25].ACLR
lcdOnIn => counter[26].ACLR
lcdOnIn => counter[27].ACLR
lcdOnIn => counter[28].ACLR
lcdOnIn => counter[29].ACLR
lcdOnIn => counter[30].ACLR
lcdOnIn => counter[31].ACLR
lcdOnIn => counter[32].ACLR
lcdOnIn => subStates~3.DATAIN
lcdOnIn => functionSetCase~7.DATAIN
lcdOnIn => state~3.DATAIN
lcdOnIn => lcdBus[7]~en.PRESET
lcdOnIn => addrToRead[0]~reg0.ENA
lcdOnIn => lcdRsSelect~reg0.ENA
lcdOnIn => lcdReadWriteSel~reg0.ENA
lcdOnIn => addrToRead[4]~reg0.ENA
lcdOnIn => addrToRead[3]~reg0.ENA
lcdOnIn => addrToRead[2]~reg0.ENA
lcdOnIn => addrToRead[1]~reg0.ENA
dataIn[0] => Selector151.IN6
dataIn[1] => Selector150.IN6
dataIn[2] => Selector149.IN5
dataIn[3] => Selector114.IN6
dataIn[4] => Selector113.IN7
dataIn[5] => Selector73.IN7
dataIn[6] => Selector72.IN7
dataIn[7] => Selector36.IN7
lcdBus[0] <= lcdBus[0].DB_MAX_OUTPUT_PORT_TYPE
lcdBus[1] <= lcdBus[1].DB_MAX_OUTPUT_PORT_TYPE
lcdBus[2] <= lcdBus[2].DB_MAX_OUTPUT_PORT_TYPE
lcdBus[3] <= lcdBus[3].DB_MAX_OUTPUT_PORT_TYPE
lcdBus[4] <= lcdBus[4].DB_MAX_OUTPUT_PORT_TYPE
lcdBus[5] <= lcdBus[5].DB_MAX_OUTPUT_PORT_TYPE
lcdBus[6] <= lcdBus[6].DB_MAX_OUTPUT_PORT_TYPE
lcdBus[7] <= lcdBus[7].DB_MAX_OUTPUT_PORT_TYPE
addrToRead[0] <= addrToRead[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addrToRead[1] <= addrToRead[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addrToRead[2] <= addrToRead[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addrToRead[3] <= addrToRead[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addrToRead[4] <= addrToRead[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcdOnOut <= lcdOnIn.DB_MAX_OUTPUT_PORT_TYPE
>>>>>>> justLcdControler
lcdReadWriteSel <= lcdReadWriteSel~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcdRsSelect <= lcdRsSelect~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcdEnableOut <= lcdEnableOut~reg0.DB_MAX_OUTPUT_PORT_TYPE
errorLed <= errorLed~reg0.DB_MAX_OUTPUT_PORT_TYPE
readEnable <= readEnable~reg0.DB_MAX_OUTPUT_PORT_TYPE


